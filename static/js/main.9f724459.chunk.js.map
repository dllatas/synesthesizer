{"version":3,"sources":["Circle.js","frequency.js","Synesthesizer.js","App.js","index.js"],"names":["Circle","props","this","id","color","onClick","style","width","height","margin","type","padding","display","backgroundColor","borderRadius","onChange","e","React","Component","splitColorIntoHex","hex","start","end","length","c","substring","push","convertFromHextoDec","map","h","parseInt","sampledFreq","reduce","acc","d","HIGH_FREQ","BARSIZE","INITIAL_COLOR","Synesthesizer","synth","Tone","Synth","toMaster","transport","Transport","state","bar","Array","fill","setBarColor","bind","playBar","stopBar","event","target","value","updatedBar","item","index","setState","notes","Frequency","seq","Sequence","time","note","triggerAttackRelease","stop","justifyContent","flexDirection","fontSize","i","key","App","className","ReactDOM","render","document","getElementById"],"mappings":"kUA+BeA,E,iLAnBJ,IAVOC,EAUR,EACuBC,KAAKD,MAA5BE,EADA,EACAA,GAAIC,EADJ,EACIA,MAAOC,EADX,EACWA,QACrB,OACE,yBAAKC,MAAO,CACXC,MAAO,OACPC,OAAQ,OACRC,OAAQ,SAET,2BACCC,KAAK,QACLJ,OApBeL,EAoBC,CAAEG,MAAOA,GApBC,CAC1BO,QAAQ,OACRC,QAAQ,eACRC,gBAAiBZ,EAAMG,MACvBU,aAAc,MACdP,MAAM,GACNC,OAAO,KAePO,SAAW,SAACC,GAAD,OAAOX,EAAQW,EAAGb,W,GAZXc,IAAMC,WCarBC,EAAoB,SAACf,GAK1B,IAJA,IAAMgB,EAAM,GAERC,EAAQ,EACRC,EAAM,EACHD,EAAQjB,EAAMmB,OAAS,GAAG,CAChC,IAAMC,EAAIpB,EAAMqB,UAAUJ,EAAOC,GACjCF,EAAIM,KAAKF,GACTH,GANY,EAOZC,GAPY,EASb,OAAOF,GAGFO,EAAsB,SAACP,GAE5B,OADYA,EAAIQ,KAAI,SAAAC,GAAC,OAAIC,SAASD,EAAG,QAIvB,EArCH,SAACzB,GACZ,IAAMgB,EAAMD,EAAkBf,GAIxB2B,EAHMJ,EAAoBP,GAEfY,QAAO,SAACC,EAAKC,GAAN,OAAYD,EAAMC,IAAG,IAR5BC,QACI,KAUrB,OAAIJ,EAbY,UAiBZA,EAhBa,gBAoBVA,GCdFK,EAAU,EACVC,EAAgB,UA8EPC,E,YA3Ed,WAAYrC,GAAQ,IAAD,sBAClB,4CAAMA,IAEN,IAAMsC,GAAQ,IAAIC,IAAKC,OAAQC,WACzBC,EAAYH,IAAKI,UAJL,OAMlB,EAAKC,MAAQ,CAGZC,IAAKC,MAAMX,GAASY,KAAKX,GACzBE,QACAI,aAED,EAAKM,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKE,QAAU,EAAKA,QAAQF,KAAb,gBAfG,E,yEAkBPG,EAAOlD,GAAK,IACf2C,EAAQ5C,KAAK2C,MAAbC,IACF1C,EAAQiD,EAAMC,OAAOC,MACrBC,EAAaV,EAAIlB,KAAI,SAAC6B,EAAMC,GACjC,OAAIA,IAAUvD,EACNsD,EAEDrD,KAGRF,KAAKyD,SAAS,CACbb,IAAKU,M,gCAII,IAAD,EACyBtD,KAAK2C,MAA/BC,EADC,EACDA,IAAKP,EADJ,EACIA,MAAOI,EADX,EACWA,UACdiB,EAAQd,EAAIlB,KAAI,SAACxB,GAAD,OAAWyD,EAAczD,MAEzC0D,EAAM,IAAItB,IAAKuB,UAAS,SAACC,EAAMC,GACpC1B,EAAM2B,qBAAqBD,EAAM,OAAQD,KACvCJ,EAAO,MAEVE,EAAIzC,QACJsB,EAAUtB,QAEVnB,KAAKyD,SAAS,CACbG,U,gCAIS,IAAD,EACuB5D,KAAK2C,MAA7BF,EADC,EACDA,UADC,IACUmB,UADV,MACgB,GADhB,GAELK,OACJxB,EAAUwB,S,+BAGD,IAAD,OACArB,EAAQ5C,KAAK2C,MAAbC,IACR,OACC,6BACC,yBAAKxC,MAAO,CAAE8D,eAAgB,SAAUxD,QAAS,OAAQyD,cAAe,QACxE,4BAAQ/D,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAASM,aAAc,MAAOwD,SAAU,aAAcjE,QAASH,KAAKiD,SAA7G,QACA,4BAAQ7C,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAASM,aAAc,MAAOwD,SAAU,aAAcjE,QAASH,KAAKkD,SAA7G,SAEA,yBAAK9C,MAAO,CAAEM,QAAS,OAAQyD,cAAe,QAE7CvB,EAAIlB,KAAI,SAACxB,EAAOmE,GAAR,OACP,kBAAC,EAAD,CAAQC,IAAKD,EAAGpE,GAAIoE,EAAGnE,MAAOA,EAAOC,QAAS,EAAK4C,uB,GAnE7BhC,IAAMC,WCKnBuD,MAVf,WACE,OACE,yBAAKC,UAAU,OACV,4BAAQA,UAAU,cACxB,kBAAC,EAAD,S,MCHHC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9f724459.chunk.js","sourcesContent":["import React from 'react';\n\nconst getStyle = (props) => ({\n   padding:\"100%\",\n   display:\"inline-block\",\n   backgroundColor: props.color,\n   borderRadius: \"50%\",\n   width:50,\n   height:50,\n})\n\nclass Circle extends React.Component {\n\trender() {\n\t\tconst { id, color, onClick } = this.props\nreturn (\n\t\t<div style={{\n\t\t\twidth: \"50px\",\n\t\t\theight: \"50px\",\n\t\t\tmargin: \"60px\"\n\t\t}}>\n\t\t<input\n\t\t\ttype=\"color\"\n\t\t\tstyle={getStyle({ color: color })}\n\t\t\tonChange={ (e) => onClick(e, id) }\n\t\t/>\n\t\t</div>\n\t)\n\t}\n\n}\n\nexport default Circle\n","const LOW_FREQ = 32.70\nconst HIGH_FREQ = 3952.06\nconst DIFF_FREQ = HIGH_FREQ - LOW_FREQ\nconst MAX_DEC_COLOR = 255 * 3\nconst RATIO = DIFF_FREQ / MAX_DEC_COLOR\n\nconst get = (color) => {\n\tconst hex = splitColorIntoHex(color)\n\tconst dec = convertFromHextoDec(hex)\n\n\tconst freq = dec.reduce((acc, d) => acc + d, 0)\n\tconst sampledFreq = freq * RATIO\n\n\tif (sampledFreq < LOW_FREQ) {\n\t\treturn LOW_FREQ\n\t}\n\n\tif (sampledFreq > HIGH_FREQ) {\n\t\treturn HIGH_FREQ\n\t}\n\n\treturn sampledFreq\n}\n\nconst splitColorIntoHex = (color) => {\n\tconst hex = []\n\tconst step = 2\n\tlet start = 1\n\tlet end = 3\n\twhile (start < color.length - 1) {\n\t\tconst c = color.substring(start, end)\n\t\thex.push(c)\n\t\tstart = start + step\n\t\tend = end + step\n\t}\n\treturn hex\n}\n\nconst convertFromHextoDec = (hex) => {\n\tconst dec = hex.map(h => parseInt(h, 16))\n\treturn dec\n}\n\nexport default {\n\tget\n}\n","import React from 'react';\nimport Tone from 'tone';\n\nimport Circle from './Circle.js';\nimport Frequency from './frequency.js';\n//import Library from './library.js';\n\nconst BARSIZE = 8\nconst INITIAL_COLOR = \"#444444\"\n\nclass Synesthesizer extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// TODO: Load sound from library into synth via UI\n\t\tconst synth = new Tone.Synth().toMaster();\n\t\tconst transport = Tone.Transport\n\n\t\tthis.state = {\n\t\t\t// TODO: Change to 2D to have chords\n\t\t\t// TODO: Allow to have more than 4 max 16\n\t\t\tbar: Array(BARSIZE).fill(INITIAL_COLOR),\n\t\t\tsynth,\n\t\t\ttransport\n\t\t}\n\t\tthis.setBarColor = this.setBarColor.bind(this);\n\t\tthis.playBar = this.playBar.bind(this);\n\t\tthis.stopBar = this.stopBar.bind(this);\n\t}\n\n\tsetBarColor(event, id) {\n\t\tconst { bar } = this.state\n\t\tconst color = event.target.value\n\t\tconst updatedBar = bar.map((item, index) => {\n\t\t\tif (index !== id) {\n\t\t\t\treturn item\n\t\t\t}\n\t\t\treturn color\n\t\t})\n\n\t\tthis.setState({\n\t\t\tbar: updatedBar\n\t\t});\n\t}\n\n\tplayBar() {\n\t\tconst { bar, synth, transport } = this.state\n\t\tconst notes = bar.map((color) => Frequency.get(color))\n\n\t\tconst seq = new Tone.Sequence((time, note) => {\n\t\t\tsynth.triggerAttackRelease(note, \"10hz\", time)\n\t\t}, notes, \"4n\")\n\n\t\tseq.start()\n\t\ttransport.start()\n\n\t\tthis.setState({\n\t\t\tseq\n\t\t});\n\t}\n\n\tstopBar() {\n\t\tconst { transport, seq = {} } = this.state\n\t\tseq.stop()\n\t\ttransport.stop()\n\t}\n\n\trender() {\n\t\tconst { bar } = this.state\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div style={{ justifyContent: \"center\", display: \"flex\", flexDirection: \"row\"}}>\n\t\t\t\t<button style={{ width: \"300px\", height: \"300px\", borderRadius: \"10%\", fontSize: \"xxx-large\"}} onClick={this.playBar}>PLAY</button>\n\t\t\t\t<button style={{ width: \"300px\", height: \"300px\", borderRadius: \"10%\", fontSize: \"xxx-large\"}} onClick={this.stopBar}>STOP</button>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"row\"}}>\n\t\t\t\t{\n\t\t\t\t\tbar.map((color, i) =>\n\t\t\t\t\t\t<Circle key={i} id={i} color={color} onClick={this.setBarColor} />\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Synesthesizer\n","import React from 'react';\nimport './App.css';\n\nimport Synesthesizer from './Synesthesizer.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\t        <header className=\"App-header\">\n\t  <Synesthesizer />\n\t  </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}